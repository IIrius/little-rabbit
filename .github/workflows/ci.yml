name: CI Pipeline

on:
  push:
    branches:
      - main
      - deploy/*
  pull_request:

env:
  PYTHON_VERSION: "3.11"

jobs:
  quality:
    name: Lint and type check
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
          # Keep the cache keyed on both dependency manifests so jobs stay in sync.
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Validate project compiles
        run: python -m compileall app

      - name: Run Ruff
        run: ruff check app tests alembic

      - name: Run Black (check)
        run: black --check app tests alembic

      - name: Run mypy
        run: mypy --config-file pyproject.toml app tests alembic

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
          # Share the same cache key strategy as the linting job.
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Run pytest
        run: pytest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t deployment-service:latest .

      - name: Generate deployment summary
        run: |
          echo "Deployment artifact generated on $(date -u)." > deployment_summary.txt

      - name: Upload deployment summary
        uses: actions/upload-artifact@v4
        with:
          name: deployment-summary
          path: deployment_summary.txt
